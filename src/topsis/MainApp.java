/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package topsis;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yaseru
 */
public class MainApp extends javax.swing.JFrame {

    /**
     * Creates new form MainApp
     */
    public MainApp() {
        initComponents();
        loadAlternatif();
        loadKriteria();
        loadNilai();
        topsis();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btn_alt = new javax.swing.JButton();
        btnhapusalternatif = new javax.swing.JToggleButton();
        btneditalternatif = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        alternatif = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        flag = new javax.swing.JTextField();
        bobot = new javax.swing.JTextField();
        namakriteria = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tipe = new javax.swing.JComboBox<>();
        btneditkriteria = new javax.swing.JToggleButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        kriteria = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btn_nilai = new javax.swing.JButton();
        btneditnilai = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        nilai = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        normal = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        terbobot = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ideal = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        hasil = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Rekomendasi Menu Makanan Kafe");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(116, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setLayout(new java.awt.BorderLayout());

        btn_alt.setText("TAMBAH");
        btn_alt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_altActionPerformed(evt);
            }
        });

        btnhapusalternatif.setText("HAPUS");
        btnhapusalternatif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusalternatifActionPerformed(evt);
            }
        });

        btneditalternatif.setText("EDIT");
        btneditalternatif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditalternatifActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("DATA Makanan");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jLabel5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(btn_alt)
                        .addGap(31, 31, 31)
                        .addComponent(btnhapusalternatif)
                        .addGap(30, 30, 30)
                        .addComponent(btneditalternatif, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(261, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_alt)
                    .addComponent(btnhapusalternatif)
                    .addComponent(btneditalternatif))
                .addGap(18, 18, 18))
        );

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        alternatif.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        alternatif.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alternatifMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(alternatif);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("ALTERNATIF", jPanel2);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("FLAG :");

        jLabel2.setText("BOBOT :");

        jLabel3.setText("NAMA :");

        jLabel4.setText("TIPE :");

        tipe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "benefit", "cost" }));
        tipe.setSelectedIndex(-1);

        btneditkriteria.setText("SIMPAN");
        btneditkriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditkriteriaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("KRITERIA");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(bobot, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(flag, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(namakriteria)
                    .addComponent(tipe, 0, 207, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addComponent(btneditkriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btneditkriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(flag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(namakriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bobot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(tipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel7)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        kriteria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        kriteria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kriteriaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(kriteria);

        jPanel5.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("KRITERIA", jPanel5);

        jPanel6.setLayout(new java.awt.BorderLayout());

        btn_nilai.setText("TAMBAH");
        btn_nilai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nilaiActionPerformed(evt);
            }
        });

        btneditnilai.setText("EDIT");
        btneditnilai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditnilaiActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("NILAI");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(jLabel8))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(btn_nilai)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btneditnilai, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(320, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_nilai)
                    .addComponent(btneditnilai))
                .addGap(23, 23, 23))
        );

        jPanel6.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        nilai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(nilai);

        jPanel6.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("NILAI", jPanel6);

        jPanel8.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel8.add(jPanel9, java.awt.BorderLayout.PAGE_START);

        normal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(normal);

        jPanel8.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("NORMALISASI", jPanel8);

        jPanel10.setLayout(new java.awt.BorderLayout());

        jPanel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel10.add(jPanel11, java.awt.BorderLayout.PAGE_START);

        terbobot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(terbobot);

        jPanel10.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("NORMALISASI TERBOBOT", jPanel10);

        jPanel12.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel12.add(jPanel14, java.awt.BorderLayout.PAGE_START);

        ideal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(ideal);

        jPanel12.add(jScrollPane6, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("NILAI IDEAL", jPanel12);

        jPanel13.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel13.add(jPanel15, java.awt.BorderLayout.PAGE_START);

        hasil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(hasil);

        jPanel13.add(jScrollPane7, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("HASIL", jPanel13);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_altActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_altActionPerformed
        // TODO add your handling code here:
        Tambah_alternatif tb_alt = new Tambah_alternatif(MainApp.this, true);
        tb_alt.setVisible(true);
    }//GEN-LAST:event_btn_altActionPerformed

    private void btn_nilaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nilaiActionPerformed
        // TODO add your handling code here:
        TambahNilai tn = new TambahNilai(MainApp.this, true);
        tn.setVisible(true);
    }//GEN-LAST:event_btn_nilaiActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel11MouseClicked

    private void alternatifMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alternatifMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_alternatifMouseClicked

    private void kriteriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kriteriaMouseClicked
        // TODO add your handling code here:
        flag.setText(kriteria.getValueAt(kriteria.getSelectedRow(), 0).toString());
        namakriteria.setText(kriteria.getValueAt(kriteria.getSelectedRow(), 1).toString());
        bobot.setText(kriteria.getValueAt(kriteria.getSelectedRow(), 2).toString());
        tipe.setSelectedItem(kriteria.getValueAt(kriteria.getSelectedRow(), 3).toString());

        flag.setEditable(false);
    }//GEN-LAST:event_kriteriaMouseClicked

    private void btneditkriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditkriteriaActionPerformed
        // TODO add your handling code here:
        if (flag.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "SILAHKAN PILIH DATA YANG AKAN DI EDIT");
        } else {
            int jawab = JOptionPane.showConfirmDialog(null, "APA ANDA YAKIN AKAN MENGEDIT DATA INI?");
            if (jawab == 0) {
                try {
                    Connection k = Koneksi.Go();
                    Statement s = k.createStatement();
                    String q_update = "UPDATE kriteria SET "
                            + "nama = '" + namakriteria.getText() + "', "
                            + "label = '" + tipe.getSelectedItem() + "', "
                            + "bobot = '" + bobot.getText() + "' "
                            + "WHERE flag = '" + flag.getText() + "'";
                    s.executeUpdate(q_update);
                    namakriteria.setText("");
                    tipe.setSelectedIndex(-1);
                    bobot.setText("");
                    flag.setText("");
                    JOptionPane.showMessageDialog(this, "Data berhasil diupdate!");
                    MainApp.loadKriteria();
                } catch (Exception e) {
                    e.printStackTrace(); // Print the stack trace to help with debugging
                }
            }
        }

    }//GEN-LAST:event_btneditkriteriaActionPerformed

    private void btnhapusalternatifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusalternatifActionPerformed
        // TODO add your handling code here:
        var nama = alternatif.getValueAt(alternatif.getSelectedRow(), 1).toString();
        var id = 0;
        try {
            Connection k = Koneksi.Go();
            Statement s = k.createStatement();
            var getid = "SELECT id FROM alternatif WHERE NAMA =  '" + nama + "' ";
            ResultSet r = s.executeQuery(getid);
            if (r.next()) {
                id = r.getInt("id");

                var cek = "SELECT alt_id FROM alt_norm_terbobot WHERE alt_id = '" + id + "'";
                ResultSet r2 = s.executeQuery(cek);
                if (r2.next()) {
                    try (Statement s2 = k.createStatement()) {
                        var d_altb = "DELETE FROM alt_norm_terbobot WHERE alt_id = '" + id + "'";
                        var d_altnorm = "DELETE FROM alt_norm WHERE alt_id = '" + id + "'";
                        var d_altbnilai = "DELETE FROM alt_nilai WHERE alt_id = '" + id + "'";
                        var d_althasil = "DELETE FROM hasil WHERE alt_id = '" + id + "'";
                        var delete = "DELETE FROM alternatif WHERE id = '" + id + "'";

                        s2.executeUpdate(d_altb);
                        s2.executeUpdate(d_altnorm);
                        s2.executeUpdate(d_altbnilai);
                        s2.executeUpdate(d_althasil);
                        s2.executeUpdate(delete);
                    }

                } else {
                    var delete = "DELETE FROM alternatif WHERE id = '" + id + "'";
                    s.executeUpdate(delete);
                }
                r2.close();
            }
            r.close();
            s.close();

            loadAlternatif();
            topsis();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnhapusalternatifActionPerformed

    private void btneditalternatifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditalternatifActionPerformed
        // TODO add your handling code here:

        Tambah_alternatif tb_alt = new Tambah_alternatif(MainApp.this, true);
        tb_alt.edit(alternatif.getValueAt(alternatif.getSelectedRow(), 1).toString());
        tb_alt.setVisible(true);
        alternatif.clearSelection();
    }//GEN-LAST:event_btneditalternatifActionPerformed

    private void btneditnilaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditnilaiActionPerformed
        // TODO add your handling code here:
        TambahNilai tb_nilai = new TambahNilai(MainApp.this, true);
        int selectedRow = nilai.getSelectedRow();
        if (selectedRow != -1) { // Memastikan bahwa ada baris yang dipilih
            String nama = nilai.getValueAt(selectedRow, 0).toString();
            tb_nilai.edit(nama);
            tb_nilai.setVisible(true);
            nilai.clearSelection();
        } else {
            JOptionPane.showMessageDialog(null, "Silakan pilih baris yang akan diedit.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btneditnilaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable alternatif;
    private javax.swing.JTextField bobot;
    private javax.swing.JButton btn_alt;
    private javax.swing.JButton btn_nilai;
    private javax.swing.JToggleButton btneditalternatif;
    private javax.swing.JToggleButton btneditkriteria;
    private javax.swing.JToggleButton btneditnilai;
    private javax.swing.JToggleButton btnhapusalternatif;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField flag;
    private static javax.swing.JTable hasil;
    private static javax.swing.JTable ideal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private static javax.swing.JTable kriteria;
    private javax.swing.JTextField namakriteria;
    private static javax.swing.JTable nilai;
    private static javax.swing.JTable normal;
    private static javax.swing.JTable terbobot;
    private javax.swing.JComboBox<String> tipe;
    // End of variables declaration//GEN-END:variables

    public static void loadAlternatif() {
        int no = 1;
        try {
            Object[] kolom = {"NO", "NAMA", "JENIS"};
            Object[][] data = null;
            DefaultTableModel model = new DefaultTableModel(data, kolom);
            alternatif.setModel(model);

            Connection k = Koneksi.Go();
            Statement st = k.createStatement();
            var q_alt = "SELECT * FROM alternatif";
            ResultSet r_alt = st.executeQuery(q_alt);
            while (r_alt.next()) {
                var id = r_alt.getInt("id");
                var name = r_alt.getString("nama");
//                var prodi = r_alt.getString("prodi");
//                var institusi = r_alt.getString("institusi");
                var jk = r_alt.getString("jk");

                // Transform jk value
                if ("L".equals(jk)) {
                    jk = "APPETIZER";
                } else if ("P".equals(jk)) {
                    jk = "MAIN COURSE";
                } else {       
                    jk = "DESSERT";
                }

                Object[] d = {no++, name,jk};
                model.addRow(d);
            }
        } catch (SQLException e) {
        }
    }

    public static void loadKriteria() {
        try {
            Object[] kolom = {"FLAG", "NAMA KRITERIA", "BOBOT", "TIPE"};
            Object[][] data = null;
            DefaultTableModel model = new DefaultTableModel(data, kolom);
            kriteria.setModel(model);

            Connection k = Koneksi.Go();
            Statement st = k.createStatement();
            var q = "SELECT * FROM kriteria ";
            ResultSet r = st.executeQuery(q);
            while (r.next()) {
                var id = r.getInt("id");
                var name = r.getString("nama");
                var bobot = r.getString("bobot");
                var label = r.getString("label");
                var flag = r.getString("flag");
                Object[] d = {flag, name, bobot, label};
                model.addRow(d);
            }
        } catch (SQLException e) {
        }
    }

    public static void loadNilai() {
        try {
            Object[] kolom = {"NAMA", "RASA", "HARGA", "BAHAN MAKANAN", "GIZI", "PENAMPILAN"};
            Object[][] data = null;
            DefaultTableModel model = new DefaultTableModel(data, kolom);
            nilai.setModel(model);

            Connection k = Koneksi.Go();
            Statement st1 = k.createStatement();
            var q1 = "SELECT * FROM alt_nilai";
            ResultSet r1 = st1.executeQuery(q1);

            while (r1.next()) {
                var id = r1.getInt("alt_id");
                var c1 = r1.getInt("c1");
                var c2 = r1.getInt("c2");
                var c3 = r1.getInt("c3");
                var c4 = r1.getInt("c4");
                var c5 = r1.getInt("c5");

                Statement st2 = k.createStatement();
                var q2 = "SELECT nama FROM alternatif WHERE id = " + id;
                ResultSet r2 = st2.executeQuery(q2);

                while (r2.next()) {
                    var nama = r2.getString("nama");
                    Object[] d = {nama, c1, c2, c3, c4, c5};
                    model.addRow(d);
                }

                r2.close();
                st2.close();
            }

            r1.close();
            st1.close();
        } catch (SQLException e) {
            e.printStackTrace(); // Print stack trace for debugging
        }
    }

    private static void truncate(String tableName) {
        try {
            Connection k = Koneksi.Go();
            Statement s = k.createStatement();
            var q = "TRUNCATE TABLE `" + tableName + "`";
            s.executeUpdate(q);
        } catch (SQLException e) {

        }
    }

    private static double pembagi(String kolom) {
        double pembagi = 0;
        try {
            Connection k = Koneksi.Go();
            Statement s = k.createStatement();
            var q = "SELECT " + kolom + " AS kolom FROM alt_nilai";
            ResultSet r = s.executeQuery(q);

            while (r.next()) {
                double nilai = r.getDouble("kolom");
                double pangkat = Math.pow(nilai, 2);
                pembagi += pangkat;
            }
        } catch (SQLException e) {

        }
        return Math.sqrt(pembagi);
    }

    private static int bobot(String kolom) {
        int bobot = 0;
        try {
            Connection k = Koneksi.Go();
            Statement s = k.createStatement();
            var q = "SELECT bobot FROM kriteria WHERE flag='" + kolom + "'";
            ResultSet r = s.executeQuery(q);

            while (r.next()) {
                bobot = r.getInt("bobot");
            }
        } catch (SQLException e) {

        }
        return bobot;
    }

    private static String label(String kolom) {
        String data = "";

        try {
            Connection k = Koneksi.Go();
            Statement s = k.createStatement();

            var q = "SELECT label FROM kriteria WHERE flag='" + kolom + "'";

            ResultSet r = s.executeQuery(q);
            while (r.next()) {
                data = r.getString("label");
            }

        } catch (SQLException e) {
        }

        return data;
    }

    private static double min_max(String kolom, int opsi) {
        double data = 0;

        try {
            Connection k = Koneksi.Go();
            Statement s = k.createStatement();

            var q = "";
            if (opsi == 1) {
                q = "SELECT MIN(" + kolom + ") AS val FROM alt_norm_terbobot";
            } else {
                q = "SELECT MAX(" + kolom + ") AS val FROM alt_norm_terbobot";
            }

            ResultSet r = s.executeQuery(q);
            while (r.next()) {
                data = r.getDouble("val");
            }

        } catch (SQLException e) {
        }

        return data;
    }

    private static double getIdeal(String flag, String kriteria) {
        double idealvalue = 0;
        try {
            Connection k = Koneksi.Go();
            Statement s = k.createStatement();
            var q = "SELECT " + kriteria + " FROM ideal WHERE flag='" + flag + "'";
            ResultSet r = s.executeQuery(q);
            while (r.next()) {
                idealvalue = r.getDouble(kriteria);
            }
        } catch (SQLException e) {
        }
        return idealvalue;
    }

    private static void calculateDistanceValue() {
        truncate("hasil");
        try {
            Object[] kolom = {"NAMA", "D+", "D-", "V"};
            DefaultTableModel model = new DefaultTableModel(null, kolom);
            hasil.setModel(model);
            //A+
            double ideal_dp_c1 = getIdeal("A+", "c1");
            double ideal_dp_c2 = getIdeal("A+", "c2");
            double ideal_dp_c3 = getIdeal("A+", "c3");
            double ideal_dp_c4 = getIdeal("A+", "c4");
            double ideal_dp_c5 = getIdeal("A+", "c5");

            //A-
            double ideal_dm_c1 = getIdeal("A-", "c1");
            double ideal_dm_c2 = getIdeal("A-", "c2");
            double ideal_dm_c3 = getIdeal("A-", "c3");
            double ideal_dm_c4 = getIdeal("A-", "c4");
            double ideal_dm_c5 = getIdeal("A-", "c5");

            //D+ and D-
            Connection k = Koneksi.Go();
            Statement s = k.createStatement();
            var q = "SELECT * FROM alt_norm_terbobot";
            ResultSet r = s.executeQuery(q);
            while (r.next()) {
                int alt_id = r.getInt("alt_id");
                double c1 = r.getDouble("c1");
                double c2 = r.getDouble("c2");
                double c3 = r.getDouble("c3");
                double c4 = r.getDouble("c4");
                double c5 = r.getDouble("c5");

                //D+
                double dp = Math.sqrt(
                        Math.pow(ideal_dp_c1 - c1, 2)
                        + Math.pow(ideal_dp_c2 - c2, 2)
                        + Math.pow(ideal_dp_c3 - c3, 2)
                        + Math.pow(ideal_dp_c4 - c4, 2)
                        + Math.pow(ideal_dp_c5 - c5, 2));
                //D-
                double dm = Math.sqrt(
                        Math.pow(c1 - ideal_dm_c1, 2)
                        + Math.pow(c2 - ideal_dm_c2, 2)
                        + Math.pow(c3 - ideal_dm_c3, 2)
                        + Math.pow(c4 - ideal_dm_c4, 2)
                        + Math.pow(c5 - ideal_dm_c5, 2));

                //v
                double v = 0.0;
                if (Double.isFinite(dm + dp) && (dm + dp) != 0) {
                    v = dm / (dm + dp);
                } else {
                    v = 0.0;
                }

                Statement st2 = k.createStatement();
                var q2 = "SELECT nama FROM alternatif WHERE id = " + alt_id;
                ResultSet r2 = st2.executeQuery(q2);

                while (r2.next()) {
                    var nama = r2.getString("nama");
                    Object[] d = {nama, dp, dm, v};
                    model.addRow(d);
                }

                r2.close();
                st2.close();
                //insert into table hasil
                Connection k2 = Koneksi.Go();
                Statement s2 = k2.createStatement();
                var q3 = "INSERT INTO hasil (alt_id,dplus,dminus,v) "
                        + "VALUE "
                        + "('" + alt_id + "','" + dp + "','" + dm + "','" + v + "')";
                s2.executeUpdate(q3);
            }
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    private static void CalcIdealValue() {
        truncate("ideal");
        try {
            Object[] kolom = {"NAMA", "RASA", "HARGA", "BAHAN MAKANAN", "GIZI", "PENAMPILAN"};
            DefaultTableModel model = new DefaultTableModel(null, kolom);
            ideal.setModel(model);
            //A+
            double ap_c1 = label("c1").equals("cost") ? min_max("c1", 1) : min_max("c1", 2);
            double ap_c2 = label("c2").equals("cost") ? min_max("c2", 1) : min_max("c2", 2);
            double ap_c3 = label("c3").equals("cost") ? min_max("c3", 1) : min_max("c3", 2);
            double ap_c4 = label("c4").equals("cost") ? min_max("c4", 1) : min_max("c4", 2);
            double ap_c5 = label("c5").equals("cost") ? min_max("c5", 1) : min_max("c5", 2);

            Connection k = Koneksi.Go();
            Statement s = k.createStatement();
            var q = "INSERT INTO ideal (flag,c1,c2,c3,c4,c5) "
                    + "VALUE "
                    + "('A+','" + ap_c1 + "','" + ap_c2 + "','" + ap_c3 + "','" + ap_c4 + "','" + ap_c5 + "')";
            s.executeUpdate(q);

            //A-
            double am_c1 = label("c1").equals("cost") ? min_max("c1", 2) : min_max("c1", 1);
            double am_c2 = label("c2").equals("cost") ? min_max("c2", 2) : min_max("c2", 1);
            double am_c3 = label("c3").equals("cost") ? min_max("c3", 2) : min_max("c3", 1);
            double am_c4 = label("c4").equals("cost") ? min_max("c4", 2) : min_max("c4", 1);
            double am_c5 = label("c5").equals("cost") ? min_max("c5", 2) : min_max("c5", 1);

            Connection k2 = Koneksi.Go();
            Statement s2 = k2.createStatement();
            var q2 = "INSERT INTO ideal (flag,c1,c2,c3,c4,c5) "
                    + "VALUE "
                    + "('A-','" + am_c1 + "','" + am_c2 + "','" + am_c3 + "','" + am_c4 + "','" + am_c5 + "')";
            s2.executeUpdate(q2);
            Object[] d = {"IDEAL +", ap_c1, ap_c2, ap_c3, ap_c4, ap_c5};
            model.addRow(d);
            Object[] e = {"IDEAL -", am_c1, am_c2, am_c3, am_c4, am_c5};
            model.addRow(e);

        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    public static void topsis() {
        truncate("alt_norm");
        truncate("alt_norm_terbobot");
        try {
            Object[] kolom = {"NAMA", "RASA", "HARGA", "BAHAN MAKANAN", "GIZI", "PENAMPILAN"};
            DefaultTableModel model = new DefaultTableModel(null, kolom);
            normal.setModel(model);
            DefaultTableModel model2 = new DefaultTableModel(null, kolom);
            terbobot.setModel(model2);

            Connection k = Koneksi.Go();
            Statement s = k.createStatement();
            var q = "SELECT * FROM alt_nilai";
            ResultSet r = s.executeQuery(q);

            while (r.next()) {
                int alt_id = r.getInt("alt_id");
                double c1 = r.getDouble("c1");
                double c2 = r.getDouble("c2");
                double c3 = r.getDouble("c3");
                double c4 = r.getDouble("c4");
                double c5 = r.getDouble("c5");

                double pembagic1 = pembagi("c1");
                double pembagic2 = pembagi("c2");
                double pembagic3 = pembagi("c3");
                double pembagic4 = pembagi("c4");
                double pembagic5 = pembagi("c5");

                // Normalisasi
                double n_c1 = c1 / pembagic1;
                double n_c2 = c2 / pembagic2;
                double n_c3 = c3 / pembagic3;
                double n_c4 = c4 / pembagic4;
                double n_c5 = c5 / pembagic5;

                // Insert normal
                Statement s2 = k.createStatement();
                var q2 = "INSERT INTO alt_norm (alt_id, c1, c2, c3, c4, c5) VALUES ('" + alt_id + "','" + n_c1 + "','" + n_c2 + "','" + n_c3 + "','" + n_c4 + "','" + n_c5 + "')";
                s2.executeUpdate(q2);
                s2.close();

                // Normalisasi terbobot
                double nt_c1 = bobot("c1") * n_c1;
                double nt_c2 = bobot("c2") * n_c2;
                double nt_c3 = bobot("c3") * n_c3;
                double nt_c4 = bobot("c4") * n_c4;
                double nt_c5 = bobot("c5") * n_c5;

                // Tambah data ke tabel
                Statement st3 = k.createStatement();
                var q3 = "SELECT nama FROM alternatif WHERE id = " + alt_id;
                ResultSet r3 = st3.executeQuery(q3);

                while (r3.next()) {
                    var nama = r3.getString("nama");
                    Object[] d = {nama, n_c1, n_c2, n_c3, n_c4, n_c5};
                    model.addRow(d);
                    Object[] e = {nama, nt_c1, nt_c2, nt_c3, nt_c4, nt_c5};
                    model2.addRow(e);
                }
                r3.close();
                st3.close();

                // Insert terbobot
                Connection k3 = Koneksi.Go();
                Statement s3 = k3.createStatement();
                var q4 = "INSERT INTO alt_norm_terbobot (alt_id, c1, c2, c3, c4, c5) VALUES ('" + alt_id + "','" + nt_c1 + "','" + nt_c2 + "','" + nt_c3 + "','" + nt_c4 + "','" + nt_c5 + "')";
                s3.executeUpdate(q4);
                s3.close();
                k3.close();
                
//                Mengurutkan hasil
//                Connection k4 = Koneksi.Go();
//                Statement s4 = k4.createStatement();
//                var q7 = "SELECT * FROM alt_norm_terbobot ORDER BY dplus DESC, dminus DESC, v DESC";
//                ResultSet r4 = s4.executeQuery(q7);
            }
            r.close();
            s.close();
            k.close();

            CalcIdealValue();
            calculateDistanceValue();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

}
